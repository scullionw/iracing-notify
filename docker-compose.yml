version: "3.7"

services:
    db:
        image: postgres
        volumes:
            - db-storage:/var/lib/postgresql/data
        environment:
            - POSTGRES_PASSWORD=example
        ports:
            - "5432:5432"
        restart: always

    scraper:
        build: ./scraper
        volumes:
            - iracing-notify-store:/app/data/
            - ./scraper/scraper/:/app/scraper/
        restart: always
        environment:
            - API_URL=http://api:5000
        env_file:
            - .env
        depends_on:
            - api

    api:
        build: ./api
        volumes:
            - ./api/api/:/app/app
        environment:
            - DATABASE_URL=postgresql://postgres:example@db/postgres
            - PORT=5000
        restart: always
        depends_on:
            - db

    # reverse-proxy:
    #     # The official v2 Traefik docker image
    #     image: traefik:v2.2
    #     # Enables the web UI and tells Traefik to listen to docker
    #     command: --api.insecure=true --providers.docker
    #     ports:
    #         # The HTTP port
    #         - "80:80"
    #         # The Web UI (enabled by --api.insecure=true)
    #         - "8080:8080"
    #     volumes:
    #         # So that Traefik can listen to the Docker events
    #         - /var/run/docker.sock:/var/run/docker.sock
    #     restart: always

    # whoami:
    #     # A container that exposes an API to show its IP address
    #     image: containous/whoami
    #     labels:
    #         - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"

    ui:
        build: ./frontend
        ports:
            - "80:80"
        restart: always
        depends_on:
            - api

volumes:
    db-storage:
    iracing-notify-store:
